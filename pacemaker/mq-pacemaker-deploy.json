{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machines."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machines."
      }
    },
    "clusterName": {
      "type": "string",
      "metadata": {
        "description": "Unique name for the cluster of three Virtual Machines."
      }
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "14.04.2-LTS",
      "allowedValues": [
        "12.04.5-LTS",
        "14.04.2-LTS",
        "15.10",
        "16.04.0-LTS"
      ],
      "metadata": {
        "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version. Allowed values: 12.04.5-LTS, 14.04.2-LTS, 15.10, 16.04.0-LTS."
      }
    }
  },
  "variables": {
    "vnetAddressPrefix": "192.168.0.0/16",
    "primarySubnetName": "PrimarySubnet",
    "alternateSubnetName": "AlternateSubnet",
    "dataSubnetName": "DataSubnet",
    "publicSubnetName": "PublicSubnet",
    "primarySubnetPrefix": "192.168.1.0/24",
    "alternateSubnetPrefix": "192.168.2.0/24",
    "dataSubnetPrefix": "192.168.3.0/24",
    "publicSubnetPrefix": "192.168.4.0/24",
    "availabilitySetName": "[concat(parameters('clusterName'),'-AS')]",
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'storage')]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "PacemakerOSdiskName": "PacemakerOSdisk",
    "MQ1OSdiskName": "MQ1OSdisk",
    "MQ2OSdiskName": "MQ2OSdisk",
    "PacemakerDataDiskName": "PacemakerDataDisk",
    "MQ1DataDiskName": "MQ1DataDisk",
    "MQ2DataDiskName": "MQ2DataDisk",
    "storageAccountType": "Standard_LRS",
    "vmStorageAccountContainerName": "vhds",
    "dnsLabelPrefix1": "[concat(parameters('clusterName'),'mq1')]",
    "dnsLabelPrefix2": "[concat(parameters('clusterName'),'mq2')]",
    "PacemakerVMname": "[concat(parameters('clusterName'),'-Pacemaker')]",
    "pacemakerVmSize": "Standard_A3",
    "vmSize": "Standard_A4",
    "virtualNetworkName": "[concat(parameters('clusterName'),'-VNET')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "primarySubnetRef": "[concat(variables('vnetID'),'/subnets/',variables('primarySubnetName'))]",
    "alternateSubnetRef": "[concat(variables('vnetID'),'/subnets/',variables('alternateSubnetName'))]",
    "dataSubnetRef": "[concat(variables('vnetID'),'/subnets/',variables('dataSubnetName'))]",
    "publicSubnetRef": "[concat(variables('vnetID'),'/subnets/',variables('publicSubnetName'))]",
    "primarySubnetNSGname": "PrimarySubnetNSG",
    "alternateSubnetNSGname": "AlternateSubnetNSG",
    "dataSubnetNSGname": "DataSubnetNSG",
    "publicSubnetNSGname": "PublicSubnetNSG"
  },
  "resources": [
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('primarySubnetNSGname'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('alternateSubnetNSGname'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('dataSubnetNSGname'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('publicSubnetNSGname'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('primarySubnetName')]",
            "properties": {
              "addressPrefix": "[variables('primarySubnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('primarySubnetNSGname'))]"
              }
            }
          },
          {
            "name": "[variables('alternateSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('alternateSubnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('alternateSubnetNSGname'))]"
              }
            }
          },
          {
            "name": "[variables('dataSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('dataSubnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('dataSubnetNSGname'))]"
              }
            }
          },
          {
            "name": "[variables('publicSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('publicSubnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('publicSubnetNSGname'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('primarySubnetNSGname')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NSG - Primary Subnet"
      },
      "properties": {
        "securityRules": [
          {
            "name": "allow-Pacemaker",
            "properties": {
              "description": "Allow Pacemaker traffic over primary subnet",
              "protocol": "Udp",
              "sourcePortRange": "*",
              "destinationPortRange": "5404-5405",
              "sourceAddressPrefix": "[variables('primarySubnetPrefix')]",
              "destinationAddressPrefix": "[variables('primarySubnetPrefix')]",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-ssh-primary",
            "properties": {
              "description": "Allow SSH from other VMs on primary subnet",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "[variables('primarySubnetPrefix')]",
              "destinationAddressPrefix": "[variables('primarySubnetPrefix')]",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('alternateSubnetNSGname')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NSG - Alternate Subnet"
      },
      "properties": {
        "securityRules": [
          {
            "name": "allow-Pacemaker",
            "properties": {
              "description": "Allow Pacemaker traffic over alternate subnet",
              "protocol": "Udp",
              "sourcePortRange": "*",
              "destinationPortRange": "5406-5407",
              "sourceAddressPrefix": "[variables('alternateSubnetPrefix')]",
              "destinationAddressPrefix": "[variables('alternateSubnetPrefix')]",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "block-internet",
            "properties": {
              "description": "Block Internet",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "access": "Deny",
              "priority": 400,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('dataSubnetNSGname')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NSG - Data Subnet"
      },
      "properties": {
        "securityRules": [
          {
            "name": "allow-AzureFiles",
            "properties": {
              "description": "Allow access to Azure Files storage",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "[variables('dataSubnetPrefix')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('publicSubnetNSGname')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NSG - Primary Subnet"
      },
      "properties": {
        "securityRules": [
          {
            "name": "allow-ssh-internet",
            "properties": {
              "description": "Allow SSH from Internet",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "[variables('publicSubnetPrefix')]",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('PacemakerVMname')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "comments": "This VirtualMachine is just a quorum node for Pacemaker",
      "dependsOn": [
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', 'Pacemaker-NIC-Primary')]",
        "[concat('Microsoft.Network/networkInterfaces/', 'Pacemaker-NIC-Alternate')]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('pacemakerVmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('PacemakerOSdiskName')]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-06-15').primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('PacemakerOSdiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[variables('PacemakerDataDiskName')]",
              "diskSizeGB": "100",
              "lun": 0,
              "vhd": {
                "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-06-15').primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('PacemakerDataDiskName'),'.vhd')]"
              },
              "createOption": "Empty"
            }
          ]
        },
        "osProfile": {
          "computerName": "[variables('PacemakerVMname')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'Pacemaker-NIC-Primary')]",
              "properties": {
                "primary": true
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'Pacemaker-NIC-Alternate')]",
              "properties": {
                "primary": false
              }
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-06-15').primaryEndpoints.blob)]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('dnsLabelPrefix1')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', 'MQ1-NIC-Primary')]",
        "[concat('Microsoft.Network/networkInterfaces/', 'MQ1-NIC-Alternate')]",
        "[concat('Microsoft.Network/networkInterfaces/', 'MQ1-NIC-Data')]",
        "[concat('Microsoft.Network/networkInterfaces/', 'MQ1-NIC-Public')]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('dnsLabelPrefix1')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('MQ1OSdiskName')]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-06-15').primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('MQ1OSdiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[variables('MQ1DataDiskName')]",
              "diskSizeGB": "100",
              "lun": 0,
              "vhd": {
                "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-06-15').primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('MQ1DataDiskName'),'.vhd')]"
              },
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'MQ1-NIC-Primary')]",
              "properties": {
                "primary": false
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'MQ1-NIC-Alternate')]",
              "properties": {
                "primary": false
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'MQ1-NIC-Data')]",
              "properties": {
                "primary": false
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'MQ1-NIC-Public')]",
              "properties": {
                "primary": true
              }
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-06-15').primaryEndpoints.blob)]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('dnsLabelPrefix2')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', 'MQ2-NIC-Primary')]",
        "[concat('Microsoft.Network/networkInterfaces/', 'MQ2-NIC-Alternate')]",
        "[concat('Microsoft.Network/networkInterfaces/', 'MQ2-NIC-Data')]",
        "[concat('Microsoft.Network/networkInterfaces/', 'MQ2-NIC-Public')]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('dnsLabelPrefix2')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('MQ2OSdiskName')]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-06-15').primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('MQ2OSdiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[variables('MQ2DataDiskName')]",
              "diskSizeGB": "100",
              "lun": 0,
              "vhd": {
                "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-06-15').primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('MQ2DataDiskName'),'.vhd')]"
              },
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'MQ2-NIC-Primary')]",
              "properties": {
                "primary": false
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'MQ2-NIC-Alternate')]",
              "properties": {
                "primary": false
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'MQ2-NIC-Data')]",
              "properties": {
                "primary": false
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'MQ2-NIC-Public')]",
              "properties": {
                "primary": true
              }
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-06-15').primaryEndpoints.blob)]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('availabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    {
      "apiVersion": "2016-01-01",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "comments": "Storage account to use for VM disks etc. and Azure File service.",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "Pacemaker-NIC-Primary",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "192.168.1.11",
              "subnet": {
                "id": "[variables('primarySubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "Pacemaker-NIC-Alternate",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "192.168.2.11",
              "subnet": {
                "id": "[variables('alternateSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "MQ1-NIC-Primary",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "192.168.1.12",
              "subnet": {
                "id": "[variables('primarySubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "MQ1-NIC-Alternate",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "192.168.2.12",
              "subnet": {
                "id": "[variables('alternateSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "MQ1-NIC-Data",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "192.168.3.12",
              "subnet": {
                "id": "[variables('dataSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "MQ1-NIC-Public",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', 'MQ1publicIP')]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "192.168.4.12",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'MQ1publicIP')]"
              },
              "subnet": {
                "id": "[variables('publicSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "MQ2-NIC-Primary",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "192.168.1.13",
              "subnet": {
                "id": "[variables('primarySubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "MQ2-NIC-Alternate",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "192.168.2.13",
              "subnet": {
                "id": "[variables('alternateSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "MQ2-NIC-Data",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "192.168.3.13",
              "subnet": {
                "id": "[variables('dataSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "MQ2-NIC-Public",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', 'MQ2publicIP')]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "192.168.4.13",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'MQ2publicIP')]"
              },
              "subnet": {
                "id": "[variables('publicSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "MQ1publicIP",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsLabelPrefix1')]"
        }
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "MQ2publicIP",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsLabelPrefix2')]"
        }
      }
    }
  ],
  "outputs": {
    "sshCommand1": {
      "type": "string",
      "value": "[concat('ssh ', parameters('adminUsername'), '@', variables('dnsLabelPrefix1'), '.', resourceGroup().location, '.cloudapp.azure.com')]"
    },
    "sshCommand2": {
      "type": "string",
      "value": "[concat('ssh ', parameters('adminUsername'), '@', variables('dnsLabelPrefix2'), '.', resourceGroup().location, '.cloudapp.azure.com')]"
    },
    "storageName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "storageKey": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2016-01-01').keys[0].value]"
    }
  }
}